// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CompaniesColumns holds the columns for the "companies" table.
	CompaniesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "overview", Type: field.TypeString, Size: 2147483647},
		{Name: "website", Type: field.TypeString},
		{Name: "industry", Type: field.TypeJSON},
		{Name: "logo_url", Type: field.TypeString},
		{Name: "size", Type: field.TypeEnum, Enums: []string{"startup", "small", "medium", "big", "huge"}, Default: "medium"},
		{Name: "founded_at", Type: field.TypeInt},
	}
	// CompaniesTable holds the schema information for the "companies" table.
	CompaniesTable = &schema.Table{
		Name:        "companies",
		Columns:     CompaniesColumns,
		PrimaryKey:  []*schema.Column{CompaniesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// JobsColumns holds the columns for the "jobs" table.
	JobsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString},
		{Name: "location", Type: field.TypeString},
		{Name: "min_salary", Type: field.TypeUint64},
		{Name: "max_salary", Type: field.TypeUint64},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"fulltime", "parttime", "contract", "intern", "freelance", "other"}, Default: "fulltime"},
		{Name: "requirements", Type: field.TypeString, Size: 1024},
		{Name: "responsibilities", Type: field.TypeString, Size: 1024},
		{Name: "benefits", Type: field.TypeString, Size: 1024},
		{Name: "user_jobs", Type: field.TypeInt, Nullable: true},
	}
	// JobsTable holds the schema information for the "jobs" table.
	JobsTable = &schema.Table{
		Name:       "jobs",
		Columns:    JobsColumns,
		PrimaryKey: []*schema.Column{JobsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "jobs_users_jobs",
				Columns:    []*schema.Column{JobsColumns[11]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SkillsColumns holds the columns for the "skills" table.
	SkillsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "dark_logo_url", Type: field.TypeString, Default: ""},
		{Name: "light_logo_url", Type: field.TypeString, Default: ""},
	}
	// SkillsTable holds the schema information for the "skills" table.
	SkillsTable = &schema.Table{
		Name:        "skills",
		Columns:     SkillsColumns,
		PrimaryKey:  []*schema.Column{SkillsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "username", Type: field.TypeString},
		{Name: "fullname", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString},
		{Name: "bio", Type: field.TypeString},
		{Name: "intro", Type: field.TypeString, Size: 2147483647},
		{Name: "github_profile", Type: field.TypeString},
		{Name: "profile_picture_url", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"new", "verified", "inactive"}, Default: "new"},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// WorkExperiencesColumns holds the columns for the "work_experiences" table.
	WorkExperiencesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString},
		{Name: "location", Type: field.TypeString},
		{Name: "start_date", Type: field.TypeTime},
		{Name: "end_date", Type: field.TypeTime, Nullable: true},
		{Name: "description", Type: field.TypeString},
		{Name: "company_staffs", Type: field.TypeInt, Nullable: true},
		{Name: "user_experiences", Type: field.TypeInt, Nullable: true},
	}
	// WorkExperiencesTable holds the schema information for the "work_experiences" table.
	WorkExperiencesTable = &schema.Table{
		Name:       "work_experiences",
		Columns:    WorkExperiencesColumns,
		PrimaryKey: []*schema.Column{WorkExperiencesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "work_experiences_companies_staffs",
				Columns:    []*schema.Column{WorkExperiencesColumns[8]},
				RefColumns: []*schema.Column{CompaniesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "work_experiences_users_experiences",
				Columns:    []*schema.Column{WorkExperiencesColumns[9]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SkillExperiencesColumns holds the columns for the "skill_experiences" table.
	SkillExperiencesColumns = []*schema.Column{
		{Name: "skill_id", Type: field.TypeInt},
		{Name: "work_experience_id", Type: field.TypeInt},
	}
	// SkillExperiencesTable holds the schema information for the "skill_experiences" table.
	SkillExperiencesTable = &schema.Table{
		Name:       "skill_experiences",
		Columns:    SkillExperiencesColumns,
		PrimaryKey: []*schema.Column{SkillExperiencesColumns[0], SkillExperiencesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "skill_experiences_skill_id",
				Columns:    []*schema.Column{SkillExperiencesColumns[0]},
				RefColumns: []*schema.Column{SkillsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "skill_experiences_work_experience_id",
				Columns:    []*schema.Column{SkillExperiencesColumns[1]},
				RefColumns: []*schema.Column{WorkExperiencesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CompaniesTable,
		JobsTable,
		SkillsTable,
		UsersTable,
		WorkExperiencesTable,
		SkillExperiencesTable,
	}
)

func init() {
	JobsTable.ForeignKeys[0].RefTable = UsersTable
	WorkExperiencesTable.ForeignKeys[0].RefTable = CompaniesTable
	WorkExperiencesTable.ForeignKeys[1].RefTable = UsersTable
	SkillExperiencesTable.ForeignKeys[0].RefTable = SkillsTable
	SkillExperiencesTable.ForeignKeys[1].RefTable = WorkExperiencesTable
}

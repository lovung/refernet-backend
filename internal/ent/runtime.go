// Code generated by entc, DO NOT EDIT.

package ent

import (
	"refernet/ent/company"
	"refernet/ent/job"
	"refernet/ent/schema"
	"refernet/ent/skill"
	"refernet/ent/user"
	"refernet/ent/workexperience"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	companyFields := schema.Company{}.Fields()
	_ = companyFields
	// companyDescCreatedAt is the schema descriptor for created_at field.
	companyDescCreatedAt := companyFields[0].Descriptor()
	// company.DefaultCreatedAt holds the default value on creation for the created_at field.
	company.DefaultCreatedAt = companyDescCreatedAt.Default.(func() time.Time)
	// companyDescUpdatedAt is the schema descriptor for updated_at field.
	companyDescUpdatedAt := companyFields[1].Descriptor()
	// company.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	company.DefaultUpdatedAt = companyDescUpdatedAt.Default.(func() time.Time)
	// companyDescName is the schema descriptor for name field.
	companyDescName := companyFields[2].Descriptor()
	// company.NameValidator is a validator for the "name" field. It is called by the builders before save.
	company.NameValidator = companyDescName.Validators[0].(func(string) error)
	// companyDescFoundedAt is the schema descriptor for founded_at field.
	companyDescFoundedAt := companyFields[9].Descriptor()
	// company.FoundedAtValidator is a validator for the "founded_at" field. It is called by the builders before save.
	company.FoundedAtValidator = companyDescFoundedAt.Validators[0].(func(int) error)
	jobFields := schema.Job{}.Fields()
	_ = jobFields
	// jobDescCreatedAt is the schema descriptor for created_at field.
	jobDescCreatedAt := jobFields[0].Descriptor()
	// job.DefaultCreatedAt holds the default value on creation for the created_at field.
	job.DefaultCreatedAt = jobDescCreatedAt.Default.(func() time.Time)
	// jobDescUpdatedAt is the schema descriptor for updated_at field.
	jobDescUpdatedAt := jobFields[1].Descriptor()
	// job.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	job.DefaultUpdatedAt = jobDescUpdatedAt.Default.(func() time.Time)
	// jobDescTitle is the schema descriptor for title field.
	jobDescTitle := jobFields[2].Descriptor()
	// job.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	job.TitleValidator = jobDescTitle.Validators[0].(func(string) error)
	// jobDescRequirements is the schema descriptor for requirements field.
	jobDescRequirements := jobFields[7].Descriptor()
	// job.RequirementsValidator is a validator for the "requirements" field. It is called by the builders before save.
	job.RequirementsValidator = jobDescRequirements.Validators[0].(func(string) error)
	// jobDescResponsibilities is the schema descriptor for responsibilities field.
	jobDescResponsibilities := jobFields[8].Descriptor()
	// job.ResponsibilitiesValidator is a validator for the "responsibilities" field. It is called by the builders before save.
	job.ResponsibilitiesValidator = jobDescResponsibilities.Validators[0].(func(string) error)
	// jobDescBenefits is the schema descriptor for benefits field.
	jobDescBenefits := jobFields[9].Descriptor()
	// job.BenefitsValidator is a validator for the "benefits" field. It is called by the builders before save.
	job.BenefitsValidator = jobDescBenefits.Validators[0].(func(string) error)
	skillFields := schema.Skill{}.Fields()
	_ = skillFields
	// skillDescCreatedAt is the schema descriptor for created_at field.
	skillDescCreatedAt := skillFields[0].Descriptor()
	// skill.DefaultCreatedAt holds the default value on creation for the created_at field.
	skill.DefaultCreatedAt = skillDescCreatedAt.Default.(func() time.Time)
	// skillDescUpdatedAt is the schema descriptor for updated_at field.
	skillDescUpdatedAt := skillFields[1].Descriptor()
	// skill.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	skill.DefaultUpdatedAt = skillDescUpdatedAt.Default.(func() time.Time)
	// skillDescName is the schema descriptor for name field.
	skillDescName := skillFields[2].Descriptor()
	// skill.NameValidator is a validator for the "name" field. It is called by the builders before save.
	skill.NameValidator = skillDescName.Validators[0].(func(string) error)
	// skillDescDarkLogoURL is the schema descriptor for dark_logo_url field.
	skillDescDarkLogoURL := skillFields[3].Descriptor()
	// skill.DefaultDarkLogoURL holds the default value on creation for the dark_logo_url field.
	skill.DefaultDarkLogoURL = skillDescDarkLogoURL.Default.(string)
	// skillDescLightLogoURL is the schema descriptor for light_logo_url field.
	skillDescLightLogoURL := skillFields[4].Descriptor()
	// skill.DefaultLightLogoURL holds the default value on creation for the light_logo_url field.
	skill.DefaultLightLogoURL = skillDescLightLogoURL.Default.(string)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[0].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[1].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[2].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescFullname is the schema descriptor for fullname field.
	userDescFullname := userFields[3].Descriptor()
	// user.FullnameValidator is a validator for the "fullname" field. It is called by the builders before save.
	user.FullnameValidator = userDescFullname.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[4].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	workexperienceFields := schema.WorkExperience{}.Fields()
	_ = workexperienceFields
	// workexperienceDescCreatedAt is the schema descriptor for created_at field.
	workexperienceDescCreatedAt := workexperienceFields[0].Descriptor()
	// workexperience.DefaultCreatedAt holds the default value on creation for the created_at field.
	workexperience.DefaultCreatedAt = workexperienceDescCreatedAt.Default.(func() time.Time)
	// workexperienceDescUpdatedAt is the schema descriptor for updated_at field.
	workexperienceDescUpdatedAt := workexperienceFields[1].Descriptor()
	// workexperience.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	workexperience.DefaultUpdatedAt = workexperienceDescUpdatedAt.Default.(func() time.Time)
	// workexperienceDescTitle is the schema descriptor for title field.
	workexperienceDescTitle := workexperienceFields[2].Descriptor()
	// workexperience.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	workexperience.TitleValidator = workexperienceDescTitle.Validators[0].(func(string) error)
}
